{"version":3,"file":"static/js/361.2a784585.chunk.js","mappings":"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","sources":["API/films.js","features/components/Search.js","features/components/FilmsList/FilmCard.js","features/components/Home/ListFilters.js","features/components/FilmsList/FilmsList.js","features/components/MoviesFilter.js","features/components/Home/NextTitleBtn.js","features/components/Home/SectionHeader.js","features/components/PagesNav/PagesNavEl.js","features/components/PagesNav/PagesNav.js","features/sections/FilmsListSection.js","store/fetchPage/selectors.js","hooks/useFetchPage.js","hooks/useLoadingstatus.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = 'b6be36a5da27d5ea7b8b28c63f72e28e'\r\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`\r\n\r\n// get trendy films\r\nexport  const getTrendMovieList =async ( page=1,mediaType='movie',timeWindow='week') => { \r\n    return await axios.get(`/trending/${mediaType}/${timeWindow}?api_key=${API_KEY}&page=${page}`)\r\n        .then(({data}) => { return data})\r\n}\r\n//get upcoming movies list\r\nexport const getUpcomingMovies = async (page=1,region) => { \r\n    return await axios(`/movie/upcoming?api_key=${API_KEY}&page=${page}`).then(({ data }) => { return data})\r\n}\r\n\r\n//get top-rated movies list\r\nexport const getTopRatedMovies = async (page=1,region) => { \r\n    return await axios(`/movie/top_rated?api_key=${API_KEY}&page=${page}`).then(({ data }) => { return data})\r\n}\r\n//get movie by id\r\nexport const getMovieById = async(movieId) => { \r\n    return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`)\r\n        .then(({ data }) => { return data})\r\n}\r\n\r\n//search movie by name\r\nexport const getMovieByName = async ( page = 1,search, year) => { \r\n    console.log(year)\r\n    return await axios.get(`/search/movie?api_key=${API_KEY}&query=${search}&page=${page}${year && `&year=${year}` }`)\r\n        .then(({ data }) => {return {results: data.results, pages: data.total_pages } })\r\n}\r\n\r\n//get image\r\n\r\n\r\n\r\n//get genres\r\nexport const getGenres = async () => { \r\n    return await axios(`/genre/movie/list?api_key=${API_KEY}`).then(({ data})=>  data.genres)\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport { useState, useEffect } from 'react';\r\nimport { styleVars } from '../../styles/vars';\r\nimport { StyledSvg, StyledIconButton } from '../../styles/styledComponents';\r\nimport sprite from '../../images/sprite.svg'\r\nconst StyledForm = styled.form`\r\n\r\nposition: relative;\r\nheight:55px;\r\nwidth: 615px;\r\nmargin: 0 auto;\r\n`\r\nconst StyledLabel = styled.label`\r\nwidth: 100%;\r\n`\r\nconst StyledSearchInput = styled.input`\r\nwidth: 100%;\r\nborder-radius: ${styleVars.borders.radius};\r\nborder: ${styleVars.borders.searchBorder};\r\npadding:  14px 25px;\r\noutline: none;\r\n&::placeholder{\r\n    font-size: 24px;\r\n    color: ${styleVars.fontColors.placeholder};\r\n}\r\n`\r\nconst StyledSubmitBtn = styled(StyledIconButton)`\r\nposition: absolute;\r\ntop: 12px;\r\nright: 22px;\r\nwidth: 32px;\r\nheight: 32px;\r\nfill: ${styleVars.fontColors.accentSecond};\r\n`\r\nexport const SearchForm = ({onHandleSubmit }) => { \r\n    const [search, setSearch] = useState('');\r\n   \r\n    const onFormSubmit = (e, search) => { \r\n        e.preventDefault();\r\n        onHandleSubmit(search);\r\n        setSearch('')\r\n    }\r\n    return (<StyledForm onSubmit={(e) => onFormSubmit(e, search) }>\r\n        <StyledLabel>\r\n            <StyledSearchInput name='film-search' value={search} onChange={(e) => setSearch(e.target.value)}  placeholder='Search...'></StyledSearchInput>\r\n        </StyledLabel>\r\n        <StyledSubmitBtn type='submit'><StyledSvg><use href={`${sprite}#icon-Research`}></use></StyledSvg></StyledSubmitBtn>\r\n    </StyledForm>)\r\n}","import styled from 'styled-components'\r\nimport { styleVars } from '../../../styles/vars';\r\nimport { useState } from 'react';\r\nimport { Link, useLocation  } from 'react-router-dom';\r\nimport noImage from '../../../images/noImage.png';\r\n\r\n\r\nconst StyledFilmCard = styled.li`\r\nposition: ${(props) => props.liststyle === 'grid' && 'relative' };\r\nwidth: 100%;\r\nmin-height: 100%;\r\n\r\n/* &:nth-child(1){\r\n    grid-row: ${(props)=> props.listStyle === 'grid' && '1/3'};\r\n    grid-column: ${(props)=> props.listStyle === 'grid' && '1/3'};\r\n}\r\n&:nth-child(4){\r\n    @media screen and (max-width:1054px) {\r\n        grid-row: ${(props)=> props.listStyle === 'grid' && '3/5'};\r\n    }\r\n    grid-row: ${(props)=> props.listStyle === 'grid' && '2/4'};\r\n    grid-column: ${(props)=> props.listStyle === 'grid' && '-3/-1'};\r\n}\r\n&:nth-child(11){\r\n   grid-row: ${(props)=> props.listStyle === 'grid' && '4/6'};\r\n    grid-column: ${(props)=> props.listStyle === 'grid' && '2/4'}; \r\n} */\r\n\r\n&:hover, &:focus{\r\n    background: ${props=> props.liststyle === 'list' && styleVars.bcgColors.listCardLinear};\r\n}\r\n`\r\nconst StyledFilmLink = styled(Link)`\r\ndisplay: ${(props) => props.liststyle === 'list' && 'flex'};\r\nheight: 100%;\r\nalign-items: center;\r\ncolor: inherit;\r\ncursor: pointer;\r\n`\r\n\r\nconst StyledCardImgWrap = styled.div`\r\ndisplay: block;\r\nheight: 100%;\r\nwidth:  ${(props) => props.liststyle === 'grid' ? '100%': '20%'} ;\r\n`\r\n\r\n\r\nconst StyledContent = styled.div`\r\n\r\nposition:  ${props=> props.liststyle === 'grid' && 'absolute'};\r\nbottom: ${props=> props.liststyle === 'grid' && '0'};\r\nleft: ${props=> props.liststyle === 'grid' && '0'};\r\n\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 100%;\r\nheight: ${props=> props.liststyle === 'grid'? '73%': '100%'};\r\npadding: ${props => props.liststyle === 'grid' ? '12%':'40px 20px 20px' };\r\n\r\ncolor: ${props=> props.liststyle === 'grid' && styleVars.fontColors.primary};\r\nbackground: ${props=> props.liststyle === 'grid' && styleVars.bcgColors.gridCardHoverLinear};\r\nborder-top-right-radius: ${props=> props.liststyle === 'grid' && styleVars.borders.radius};\r\nborder-top-left-radius: ${props => props.liststyle === 'grid' && styleVars.borders.radius};\r\n\r\n`\r\n\r\nconst StyledCardText = styled.p`\r\nfont-size:  ${props=> props.overview? '20px': '32px'};\r\nflex-grow: 1;\r\n\r\n`\r\nconst StyledCardSpan = styled.span`\r\nfont-size: 20px;\r\ncolor: ${styleVars.fontColors.accentSecond};\r\nalign-self: center;\r\n\r\n\r\n&:hover, &:focus{\r\n    text-decoration: underline;\r\n}\r\n`\r\n\r\n\r\nexport const FilmCard = ({  id, name, poster,overview, liststyle}) => {\r\n    const [descriptionVisibility, setDescriptionVisibility] = useState(false);\r\n    const location = useLocation()\r\n   \r\n    return (<StyledFilmCard liststyle={ liststyle} onMouseOver={() => setDescriptionVisibility(true)} onMouseOut={() => setDescriptionVisibility(false)} >\r\n        <StyledFilmLink liststyle={ liststyle} id={id} to={`${location.pathname}/${id }`} state={{background: location }}>\r\n            <StyledCardImgWrap liststyle={ liststyle}>\r\n                <img  src={poster? `https://image.tmdb.org/t/p/original${poster}` : noImage} alt={name }></img>\r\n            </StyledCardImgWrap>\r\n            {liststyle === 'list' && (\r\n                <StyledContent liststyle={ liststyle}>\r\n                    <StyledCardText>{name}</StyledCardText>\r\n                    <StyledCardText overview='true'>{ overview}</StyledCardText>\r\n                    <StyledCardSpan >Detailes</StyledCardSpan>\r\n            </StyledContent>\r\n            )}\r\n            {(descriptionVisibility && liststyle === 'grid') && (<StyledContent liststyle={ liststyle}>\r\n                <StyledCardText>{name}</StyledCardText>\r\n               \r\n                <StyledCardSpan >Detailes</StyledCardSpan>\r\n            </StyledContent>) }        \r\n        </StyledFilmLink>    \r\n    </StyledFilmCard>)\r\n }\r\n","import styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { StyledIconButton , StyledSvg} from '../../../styles/styledComponents';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { setListStyle } from '../../../store/siteSettings/reducers';\r\n\r\nconst StyledListViewWrapper = styled.div`\r\ndisplay: flex;\r\njustify-content: end;\r\nalign-items: center;\r\nmargin-bottom: 25px;\r\n`\r\n\r\nconst StyledListViewBtn = styled(StyledIconButton)`\r\nwidth: 24px;\r\nheight: 24px;\r\n\r\nfill: ${(props)=> props.colorTheme === 'light'? styleVars.fontColors.primary: styleVars.fontColors.secondary};\r\n&:hover, &:focus{\r\n    fill: ${(props)=> props.colorTheme === 'light'? styleVars.fontColors.accentSecond: styleVars.fontColors.accentFirst};\r\n}\r\n\r\n`\r\nexport const ListViewFilters = ({ listView, colorTheme}) => { \r\n    const dispatch = useDispatch();\r\n    const setListView = (e) => { \r\n        const view = e.currentTarget.getAttribute(['data-view'])\r\n        dispatch(setListStyle(view))\r\n    }\r\n    return (\r\n        <StyledListViewWrapper>\r\n            {listView === 'grid' ? (\r\n                <StyledListViewBtn colorTheme={colorTheme} onClick={(e) => setListView(e)} type='button' data-view='list'><StyledSvg><use href={`${sprite}#icon-list-format`}></use></StyledSvg></StyledListViewBtn>)\r\n                : (<StyledListViewBtn colorTheme={colorTheme} onClick={(e) => setListView(e)} type='button' data-view='grid'><StyledSvg><use href={`${sprite}#icon-grid`} ></use></StyledSvg></StyledListViewBtn>)} \r\n        </StyledListViewWrapper>\r\n            )\r\n}","import styled from 'styled-components';\r\nimport { FilmCard } from './FilmCard';\r\nimport { usePageSettings } from '../../../hooks/usePageSettings';\r\nimport { useEffect } from 'react';\r\nimport { ListViewFilters } from '../Home/ListFilters';\r\nconst StyledListBlock = styled.div`\r\n\r\n`\r\nconst StyledList = styled.ul`\r\ndisplay: grid;\r\ngrid-template-columns: ${(props) => props.listStyle === 'grid' ? 'repeat(auto-fill, minmax(235px, auto))' : '1fr'};\r\ngrid-auto-rows: ${(props)=> props.listStyle === 'grid'? 'minmax(300px, auto)': 'minmax(320px, auto)'};\r\ngrid-gap: 25px;\r\n`\r\n\r\n\r\nexport const FilmList = ({ filmsArr, colorTheme, listView }) => { \r\n    \r\n    const { listStyle } = usePageSettings();\r\n    return (\r\n        <StyledListBlock>\r\n            <ListViewFilters colorTheme={colorTheme} listView={ listView}></ListViewFilters>\r\n            <StyledList listStyle={listStyle}>\r\n        {filmsArr?.map((item) => <FilmCard key={item.id} id={item.id} name={item.title} overview={item.overview } liststyle={listStyle} date={item.release_date}  poster={ item.poster_path}></FilmCard>)}\r\n    </StyledList>\r\n        </StyledListBlock>\r\n        )\r\n}","import styled from 'styled-components';\r\nimport { StyledIconButton, StyledSvg } from '../../styles/styledComponents';\r\nimport sprite from '../../images/sprite.svg';\r\nimport { styleVars } from '../../styles/vars';\r\nimport { useState, useEffect} from 'react'\r\nimport { getTrendMovieList } from '../../API/films';\r\nconst StyledFilterContainer = styled.div`\r\ndisplay: flex;\r\n\r\n`\r\nconst StyledText = styled.p`\r\nfont-size: 24px;\r\n/* color: ${styleVars.fontColors.primary}; */\r\nmargin-right: 15px;\r\n`\r\nconst StyledArrowBtn = styled(StyledIconButton)`\r\nwidth: 30px;\r\nheight: 30px;\r\nfill: inherit;\r\n`\r\n\r\nexport const MoviesFilter = ({ genresList, onFiltersChange}) => { \r\n    const [filterVisibility, setFilterVisibility] = useState(false);\r\n    const [year, setYear] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n\r\n  /*   useEffect(() => { \r\n onFiltersChange({year,genre});\r\n    }, [year,genre]) */\r\n    \r\n    const onHandleSubmit = (e) => { \r\n        e.preventDefault();\r\n        onFiltersChange({year,genre});\r\n        \r\n    }\r\n    const onHandleChange = (e) => { \r\n        switch (e.target.name) {\r\n            case 'year':\r\n                setYear(e.target.value)\r\n                break;\r\n            case 'genre':\r\n                setGenre(e.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const date = new Date();\r\n    const currentYear = date.getFullYear()\r\n    return (<StyledFilterContainer>\r\n        <StyledText>Filter</StyledText>\r\n        <StyledArrowBtn type='button' onClick={() => setFilterVisibility(!filterVisibility)}>\r\n            <StyledSvg><use href={`${sprite}#icon-right-arrow`}></use></StyledSvg>\r\n        </StyledArrowBtn>\r\n        {filterVisibility && (<form onSubmit={(e)=> onHandleSubmit(e)}>\r\n            <label>\r\n                Year\r\n                <input type='number' min='1900' max={currentYear} step='1' name='year'  placeholder='Year' onChange={(e)=>onHandleChange(e) }></input>\r\n            </label>\r\n            <label for='genre'></label>\r\n            <select id='genre' name='genre'  onChange={(e)=>onHandleChange(e) }>\r\n                <option value='Genre' hidden>Genre</option>\r\n                {genresList?.map(genre => (<option value={genre.id} id={genre.id}>{genre.name }</option>)) }\r\n            </select>\r\n            <button type='submit'>Search</button>\r\n        </form>)}\r\n    </StyledFilterContainer>)\r\n}","import styled from 'styled-components';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport {  StyledIconButton, StyledSvg } from '../../../styles/styledComponents';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst StyledNextBtn = styled(StyledIconButton)`\r\nwidth: 45px;\r\nheight: 45px;\r\nposition: relative;\r\nfill: inherit;\r\n&:hover, &:focus{\r\n  fill: ${(props) => props.colorTheme === 'light' ? styleVars.fontColors.accentSecond : styleVars.fontColors.accentFirst};  \r\n}\r\n`\r\n\r\nconst StyledNextTitle = styled.span`\r\nposition: absolute;\r\ntop: 100%;\r\nleft: -50%;\r\nmin-width: 300%;\r\nfont-size: 16px;\r\ncolor:  ${props => props.colorTheme === 'light' ? styleVars.fontColors.primary : styleVars.fontColors.secondary};\r\ntext-align: start;\r\nborder-radius: ${styleVars.borders.radius};\r\n\r\n`\r\n\r\n\r\nexport const NextTitleBtn = ({ colorTheme, title, pathArr}) => { \r\n  const [nextTitle, setNextTitle] = useState('');\r\n  const [nextTitleVisibility, setNextTitleVisibility]=useState(false)\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  let currentPath = pathArr.find((item) => item.path === location.pathname);\r\n    const currentIndex = pathArr.indexOf(currentPath)\r\n  const openNextPage = (arr) => { \r\n    if (currentIndex === arr.length - 1) {\r\n      navigate(arr[0].path);\r\n      return\r\n    }\r\n    navigate(arr[currentIndex+1].path)\r\n  }\r\n  const showNextTitle = (arr) => { \r\n    if (currentIndex === arr.length - 1) { \r\n      setNextTitle(arr[0].title);\r\n      setNextTitleVisibility(true)\r\n      return \r\n    }\r\n    setNextTitle(arr[currentIndex + 1].title);\r\n    setNextTitleVisibility(true);\r\n  }\r\n    return (\r\n         \r\n        <StyledNextBtn colorTheme={colorTheme} type='button' onMouseOut={()=>setNextTitleVisibility(false)} onMouseOver={()=> showNextTitle(pathArr)} onClick={() => openNextPage(pathArr)}>\r\n          <StyledSvg><use href={`${sprite}#icon-right-arrow`}></use></StyledSvg>\r\n          {nextTitleVisibility && <StyledNextTitle colorTheme={colorTheme}>{nextTitle}</StyledNextTitle> }\r\n        </StyledNextBtn>\r\n        \r\n    )\r\n}","import styled from 'styled-components';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport {  StyledIconButton, StyledSvg } from '../../../styles/styledComponents';\r\n\r\nimport { NextTitleBtn } from './NextTitleBtn';\r\nimport { SearchForm } from '../Search';\r\n\r\n const StyledSectionHeader = styled.div`\r\n\r\n\r\n`\r\nconst StyledTitleBlock = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-around;\r\n`\r\nconst StyledTitle = styled.h1`\r\nfont-size: 50px;\r\n\r\n`\r\n\r\n\r\n\r\nexport const SectionHeader = ({ colorTheme ,title , pathArr, search, onSearch}) => { \r\n \r\n    return (\r\n        <StyledSectionHeader>\r\n           {title && (<StyledTitleBlock>\r\n                <StyledTitle>{title}</StyledTitle>\r\n                <NextTitleBtn colorTheme={ colorTheme} pathArr={ pathArr}></NextTitleBtn>\r\n            </StyledTitleBlock>)}\r\n            {search && (\r\n            <SearchForm onHandleSubmit={onSearch}></SearchForm>\r\n\r\n            ) }\r\n\r\n                    \r\n                </StyledSectionHeader>\r\n    )\r\n}","import styled from 'styled-components';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport { useState, useMemo ,useEffect} from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setFetchPage } from '../../../store/fetchPage/reducers';\r\nimport { useFetchPage } from '../../../hooks/useFetchPage';\r\nconst StyledEl = styled.button`\r\nbackground-color: transparent;\r\ncolor: ${props=> props.content?.toString() === props.fetchPage? styleVars.fontColors.accentFirst : 'inherit'} ; \r\nfont-size: 25px;\r\ncursor: pointer;\r\nborder: none;\r\n\r\n&:hover, &:focus{\r\n  color: ${styleVars.fontColors.accentFirst};\r\n}\r\n`\r\n\r\nexport const PagesNavEl = ({ content, value }) => {\r\n  const dispatch = useDispatch();\r\n  const { fetchPage } = useFetchPage();\r\n   const setPage = (page) => {\r\n        dispatch(setFetchPage(page))\r\n     }\r\n\r\n    return (\r\n      <StyledEl key={`${content}_${value}`} fetchPage={fetchPage} content={ content}\r\n       type='button' value={value} onClick={(e) => { setPage(e.target.value) }} >{content}</StyledEl>\r\n  )  \r\n }","import styled from 'styled-components';\r\n\r\nimport { styleVars } from '../../../styles/vars';\r\nimport { useState, useMemo ,useEffect} from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { PagesNavEl } from './PagesNavEl';\r\nimport { useFetchPage } from '../../../hooks/useFetchPage';\r\n\r\nconst StyledPagesNavBlock = styled.div`\r\njustify-self: center;\r\nmax-width: 500px;\r\ndisplay: inline-flex;\r\njustify-content: space-between;\r\n`\r\n\r\nexport const PagesNav = ({ totalPages, onPageClick, search}) => { \r\n   /*  const [fetchPage, setFetchPage] = useState('1'); */\r\n    const [pagesArr, setPagesArr] = useState([]);\r\n    const { fetchPage } = useFetchPage();\r\n    \r\n   /*  const location = useLocation();\r\n     useEffect(() => { \r\n         setFetchPage('1')\r\n         console.log('fetch page 1 on  new search')\r\n     }, [search])\r\n    useEffect(() => {\r\n        \r\n        \r\n        setFetchPage('1')\r\n         console.log('fetch page 1 on  new location')\r\n        \r\n     },[location]) */\r\n    useEffect(() => { \r\n        console.log('totalPages',totalPages)\r\n        const arr = [];\r\n         for (let i = 1; i <= totalPages; i += 1) {\r\n           arr.push(i)\r\n        }\r\n        setPagesArr(arr)\r\n    }, [totalPages])\r\n   \r\n    /*  const pagesArr = useMemo(() => {\r\n         console.log('memo works')\r\n        const arr = [];\r\n         for (let i = 1; i <= totalPages; i += 1) {\r\n           arr.push(i)\r\n        }\r\n        return arr\r\n     }, [totalPages])   */\r\n    \r\n     \r\n    /* const renderBtn = (value, content) => { \r\n       \r\n        return <button key={`${content}_${value}`}  style={{backgroundColor: content.toString()===fetchPage? 'red': 'blue'}} type='button' value={value} onClick={(e) => { setFetchPage(e.target.value) }} >{content}</button>\r\n\r\n    } */\r\n    const renderPages = () => { \r\n        if (pagesArr.length <= 10) {  \r\n            return pagesArr.map(page => <PagesNavEl value={page} content={ page}  ></PagesNavEl> ) \r\n        }\r\n        if (fetchPage <= 5) {\r\n            return (<>   \r\n                {pagesArr.filter((p, ind) => ind <= 5).map(page => <PagesNavEl value={page} content={ page}  ></PagesNavEl>)}\r\n                <span> ... </span>\r\n                <PagesNavEl value={pagesArr.length} content={ pagesArr.length}  ></PagesNavEl>\r\n               \r\n        </>   \r\n        ) \r\n        }\r\n        if (fetchPage >= (pagesArr.length - 4)) { \r\n            return (<>   \r\n                 <PagesNavEl value='1' content='1'  ></PagesNavEl>\r\n            <span> ... </span>\r\n                {pagesArr.filter((p, ind) => ind >= pagesArr.length - 6).map(page => <PagesNavEl value={page} content={ page}  ></PagesNavEl> )}\r\n        </>   \r\n        ) \r\n        }\r\n        return (<>  \r\n            <PagesNavEl value='1' content='1'  ></PagesNavEl>\r\n               \r\n            <span> ... </span>\r\n            {pagesArr.filter((p, ind) => (ind >= Number(fetchPage) - 2) && (ind <= Number(fetchPage) + 5)).map(page => <PagesNavEl value={page} content={ page}  ></PagesNavEl>)}\r\n            <span> ... </span>\r\n            <PagesNavEl value={pagesArr.length} content={ pagesArr.length}  ></PagesNavEl>\r\n            \r\n        </>   \r\n        ) \r\n\r\n    }\r\n\r\n    return (\r\n        <StyledPagesNavBlock>\r\n            <PagesNavEl value='1' content='<<' ></PagesNavEl>\r\n            \r\n           \r\n            {fetchPage > 1 && <PagesNavEl value={(Number(fetchPage) - 1)} content='<' ></PagesNavEl>}\r\n            {renderPages()}\r\n\r\n            {(fetchPage < pagesArr.length) && <PagesNavEl value={ (Number(fetchPage) + 1)} content='>'  ></PagesNavEl> }\r\n            <PagesNavEl value={ (pagesArr[pagesArr.length -1])} content='>>'  ></PagesNavEl>\r\n                    \r\n        </StyledPagesNavBlock>\r\n    )\r\n}","\r\nimport { FilmList } from '../components';\r\nimport { SectionHeader } from '../components/Home';\r\nimport { StyledSection } from '../../styles/styledComponents';\r\nimport { PagesNav } from '../components/PagesNav/PagesNav';\r\nimport { usePageSettings } from '../../hooks/usePageSettings';\r\nimport { ListLoader } from '../components/Loader/Loader';\r\nexport const FilmsListSection = ({filmsList,  title, pathArr, totalPages, setFetchPage, search, onSearch, loadingStatus}) => { \r\n    const { colorTheme , listStyle} = usePageSettings();\r\n   return (\r\n            <StyledSection>\r\n           <SectionHeader title={title} pathArr={pathArr} colorTheme={colorTheme} search={search} onSearch={onSearch }></SectionHeader>\r\n           {loadingStatus==='pending' && <ListLoader></ListLoader>  }\r\n           {loadingStatus === 'loaded' && filmsList.length > 0 && <FilmList filmsArr={filmsList} colorTheme={colorTheme} listView={listStyle}></FilmList>}    \r\n           \r\n           {loadingStatus==='loaded' && totalPages !== 0 && (<PagesNav totalPages={totalPages} /* onPageClick={setFetchPage} */ ></PagesNav>)\r\n        }\r\n        </StyledSection>       \r\n    )\r\n}\r\n","export const setFetchPageSlct = (state) => state.fetchPage.page;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFetchPageSlct } from \"../store/fetchPage/selectors\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { setFetchPage } from \"../store/fetchPage/reducers\";\r\n\r\n\r\nexport const useFetchPage = () => { \r\n    const location = useLocation();\r\n    const fetchPage = useSelector(setFetchPageSlct);\r\n    const dispatch = useDispatch();\r\n   /*  useEffect(() => { \r\n        dispatch(setFetchPage('1'))\r\n    },[location]) */\r\n    const setPage = (page) => {\r\n        dispatch(setFetchPage(page))\r\n    }\r\n\r\n   /*   useEffect(() => { \r\n        console.log('new location')\r\n    },[location]) */\r\n\r\n\r\n    return {fetchPage, setPage}\r\n}","import { useState } from \"react\";\r\n\r\nexport const useLoadingStatus = () => {\r\n\r\n    const [loadingStatus, setLoadingStatus] = useState('');\r\n\r\n    return {\r\n        loadingStatus,\r\n        setLoadingStatus\r\n    }\r\n }"],"names":["API_KEY","axios","getTrendMovieList","page","mediaType","timeWindow","then","data","getUpcomingMovies","getTopRatedMovies","getMovieById","movieId","getMovieByName","search","year","console","log","results","pages","total_pages","getGenres","genres","StyledForm","styled","StyledLabel","StyledSearchInput","styleVars","StyledSubmitBtn","StyledIconButton","SearchForm","onHandleSubmit","useState","setSearch","onSubmit","e","preventDefault","onFormSubmit","name","value","onChange","target","placeholder","type","href","sprite","StyledFilmCard","props","liststyle","listStyle","StyledFilmLink","Link","StyledCardImgWrap","StyledContent","StyledCardText","overview","StyledCardSpan","FilmCard","id","poster","descriptionVisibility","setDescriptionVisibility","location","useLocation","onMouseOver","onMouseOut","to","pathname","state","background","src","noImage","alt","StyledListViewWrapper","StyledListViewBtn","colorTheme","ListViewFilters","listView","dispatch","useDispatch","setListView","view","currentTarget","getAttribute","setListStyle","onClick","StyledListBlock","StyledList","FilmList","filmsArr","usePageSettings","map","item","title","date","release_date","poster_path","StyledNextBtn","StyledNextTitle","NextTitleBtn","pathArr","nextTitle","setNextTitle","nextTitleVisibility","setNextTitleVisibility","navigate","useNavigate","currentPath","find","path","currentIndex","indexOf","arr","length","showNextTitle","StyledSectionHeader","StyledTitleBlock","StyledTitle","SectionHeader","onSearch","Search","StyledEl","content","toString","fetchPage","PagesNavEl","useFetchPage","setFetchPage","StyledPagesNavBlock","PagesNav","totalPages","onPageClick","pagesArr","setPagesArr","useEffect","i","push","Number","filter","p","ind","FilmsListSection","filmsList","loadingStatus","setFetchPageSlct","useSelector","setPage","useLoadingStatus","setLoadingStatus"],"sourceRoot":""}