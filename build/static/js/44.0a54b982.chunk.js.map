{"version":3,"file":"static/js/44.0a54b982.chunk.js","mappings":"2RASMA,EAAmB,CAAC,CAAEC,KAAK,aAAeC,MAAO,oBACrD,CAAED,KAAK,WAAaC,MAAO,kBACzB,CAAED,KAAK,YAAcC,MAAO,aAuChC,EArCsB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACrB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAGA,IAFsBC,EAAAA,EAAAA,KAAdC,WAEgCC,EAAAA,EAAAA,MAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,SACxBC,GAAWC,EAAAA,EAAAA,MACf,GAA4CC,EAAAA,EAAAA,KAApCC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,iBAEjBC,EAAgB,SAACC,GACnBF,EAAiB,WACjBX,EAAaa,EAASC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SACvCL,EAAiB,WAoBrB,OAlBAM,EAAAA,EAAAA,YAAU,WACN,OAAQV,EAASW,UACb,IAAI,aACAN,EAAcR,GACd,MACJ,IAAI,WACCQ,EAAcP,GACf,MAEJ,IAAI,YACCO,EAAcN,MAMxB,CAACC,KAIA,SAACY,EAAA,EAAD,CAAkBT,cAAeA,EAAeb,MAAOA,EAAOE,UAAWA,EAAWqB,QAASzB","sources":["features/pages/Private/UserFilms.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {  getMovieById, getGenres } from '../../../API/films';\r\nimport { FilmsListSection } from '../../sections/FilmsListSection';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { useUserFilms } from '../../../hooks/useUserFilms';\r\nimport { useLoadingStatus } from '../../../hooks/useLoadingstatus';\r\nimport { useFetchPage } from '../../../hooks/useFetchPage';\r\nconst userFilmsPathArr = [{ path:`/favorites` , title: 'Favorites movies' },\r\n  { path: `/watched`, title: 'Watched movies' },\r\n    { path: `/wishlist`, title: 'Wishlist' }]\r\n\r\nconst UserFilmsPage = ({ title }) => { \r\n    const [filmsList, setFilmsList] = useState([])\r\n    const { fetchPage } = useFetchPage();\r\n   /*  const [fetchPage, setFetchPage]= useState('1') */\r\n    const { favorites, watched, wishlist} = useUserFilms()\r\n    let location = useLocation();\r\n    const { loadingStatus, setLoadingStatus } = useLoadingStatus()\r\n    \r\n    const loadFilmsList = (category) => { \r\n        setLoadingStatus('pending');\r\n        setFilmsList(category.map(film => film.info));\r\n        setLoadingStatus('loaded')\r\n    }\r\n    useEffect(() => {\r\n        switch (location.pathname) {\r\n            case `/favorites`:\r\n                loadFilmsList(favorites)\r\n                break\r\n            case `/watched`:\r\n                 loadFilmsList(watched)\r\n                break\r\n               \r\n            case `/wishlist`:\r\n                 loadFilmsList(wishlist)\r\n                break\r\n        \r\n            default:\r\n                break;\r\n        }\r\n     },[location])\r\n     \r\n    return (\r\n        \r\n        <FilmsListSection loadingStatus={loadingStatus} title={title} filmsList={filmsList} pathArr={userFilmsPathArr} ></FilmsListSection>\r\n    \r\n    )\r\n}\r\nexport default UserFilmsPage"],"names":["userFilmsPathArr","path","title","useState","filmsList","setFilmsList","useFetchPage","fetchPage","useUserFilms","favorites","watched","wishlist","location","useLocation","useLoadingStatus","loadingStatus","setLoadingStatus","loadFilmsList","category","map","film","info","useEffect","pathname","FilmsListSection","pathArr"],"sourceRoot":""}