{"version":3,"file":"static/js/368.edf41658.chunk.js","mappings":"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","sources":["API/films.js","features/components/UserAddFilmBtns/UserAddFilmsBtns.js","features/sections/FilmInfo.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = 'b6be36a5da27d5ea7b8b28c63f72e28e'\r\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`\r\n\r\n// get trendy films\r\nexport  const getTrendMovieList =async ( page=1,mediaType='movie',timeWindow='week') => { \r\n    return await axios.get(`/trending/${mediaType}/${timeWindow}?api_key=${API_KEY}&page=${page}`)\r\n        .then(({data}) => { return data})\r\n}\r\n//get upcoming movies list\r\nexport const getUpcomingMovies = async (page=1,region) => { \r\n    return await axios(`/movie/upcoming?api_key=${API_KEY}&page=${page}`).then(({ data }) => { return data})\r\n}\r\n\r\n//get top-rated movies list\r\nexport const getTopRatedMovies = async (page=1,region) => { \r\n    return await axios(`/movie/top_rated?api_key=${API_KEY}&page=${page}`).then(({ data }) => { return data})\r\n}\r\n//get movie by id\r\nexport const getMovieById = async(movieId) => { \r\n    return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`)\r\n        .then(({ data }) => { return data})\r\n}\r\n\r\n//search movie by name\r\nexport const getMovieByName = async ( page = 1,search, year) => { \r\n    console.log(year)\r\n    return await axios.get(`/search/movie?api_key=${API_KEY}&query=${search}&page=${page}${year && `&year=${year}` }`)\r\n        .then(({ data }) => {return {results: data.results, pages: data.total_pages } })\r\n}\r\n\r\n//get image\r\n\r\n\r\n\r\n//get genres\r\nexport const getGenres = async () => { \r\n    return await axios(`/genre/movie/list?api_key=${API_KEY}`).then(({ data})=>  data.genres)\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport { useState, useEffect, useMemo, useLayoutEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport { StyledIconButton, StyledSvg } from '../../../styles/styledComponents';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { setFilmInfo, deleteFilmInfo } from '../../../firebase/realTimeDB'; \r\nimport { useUserFilms } from '../../../hooks/useUserFilms';\r\nimport { setFavorite, setWatched, setWishlist, removeFromFavorite, removeFromWatched, removeFromWishlist } from '../../../store/userFilms/reducers';\r\nconst StyledBtnWrap = styled.ul`\r\n\r\nposition: absolute;\r\nright: 0;\r\ntop: 30%;\r\nz-index: 1002;\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n`\r\nconst StyledBtn = styled(StyledIconButton)`\r\n\r\n/* fill: ${(inList) =>  inList===true? styleVars.fontColors.accentFirst: styleVars.fontColors.primary };\r\n */\r\n`\r\n\r\nexport const UserAddFilmsBtns = ({ film}) => { \r\n     const { isAuth, id } = useAuth();\r\n    const {favorites, watched, wishlist, /* onFilmAddedToDB */ } = useUserFilms()\r\n    \r\n    const dispatch = useDispatch();\r\n    const toggleFilm = async (uid, film, category, filmsList, removeFunc, addFunc) => { \r\n        const {inList, key} = filterId(filmsList, film.id);  \r\n            console.log('key',key)\r\n            console.log(inList)\r\n        if (inList === true) {\r\n            try {\r\n                await deleteFilmInfo(uid, key, category)\r\n                /* console.log('film deleted') */\r\n                dispatch(removeFunc(key))\r\n                /* console.log('deleted from store') */\r\n                return\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n              const newKey =  await setFilmInfo(uid, film, category)\r\n               /*  console.log('film added')\r\n                console.log('key addded', newKey) */\r\n                dispatch(addFunc([{key: newKey, info: film}]))\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n         }\r\n            \r\n    }\r\n\r\n    function filterId(filmsList, filmId) { \r\n        const filmsIdArr = filmsList.map(film => film.info.id)\r\n        const inList = filmsIdArr.includes(filmId);\r\n        if (inList === true) {\r\n            const film = filmsList.find(film => film.info.id === filmId)\r\n            const key = film.key;\r\n            return {inList, key}\r\n         }\r\n\r\n        return {inList} \r\n    }\r\n\r\n   async function onBtnClick(e) { \r\n        if (!isAuth) {\r\n             //notification\r\n             console.log('not auth')\r\n             return\r\n         }\r\n    switch ( e.currentTarget.id) {\r\n        case 'favorites':   \r\n            toggleFilm(id, film, e.currentTarget.id, favorites, removeFromFavorite, setFavorite)\r\n            break;\r\n        case 'watched':\r\n           \r\n            toggleFilm(id, film, e.currentTarget.id, watched, removeFromWatched, setWatched)\r\n            break;\r\n        case 'wishlist':\r\n             toggleFilm(id, film, e.currentTarget.id, wishlist, removeFromWishlist, setWishlist)\r\n\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    }\r\n    function setBtnFill(category, filmId) { \r\n        return {fill: filterId(category, filmId).inList===true? styleVars.fontColors.accentFirst: styleVars.fontColors.primary}\r\n    }\r\n    return ( <StyledBtnWrap>\r\n                     <li btn={ true}>\r\n            <StyledBtn onClick={onBtnClick} style={setBtnFill(favorites, film.id)} id='favorites' type='button'><StyledSvg ><use href={`${sprite}#icon-heart` }></use></StyledSvg></StyledBtn>\r\n                     </li>\r\n                     <li btn={ true}>\r\n                         <StyledBtn onClick={onBtnClick } style={setBtnFill(watched, film.id)}  id='watched' type='button'><StyledSvg ><use href={`${sprite}#icon-ApproveTick` }></use></StyledSvg></StyledBtn>\r\n                     </li>\r\n                     <li btn={ true}>\r\n                         <StyledBtn onClick={onBtnClick } style={setBtnFill(wishlist, film.id)}  id='wishlist' type='button'><StyledSvg ><use href={`${sprite}#icon-Plus` }></use></StyledSvg></StyledBtn>\r\n                     </li>\r\n        </StyledBtnWrap>)\r\n}","import styled from 'styled-components';\r\nimport { useState, useEffect, useMemo, useLayoutEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { styleVars } from '../../styles/vars';\r\nimport { StyledIconButton, StyledSvg } from '../../styles/styledComponents';\r\nimport { getMovieById } from '../../API/films';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { loadFilmInfoToDB } from '../../firebase/realTimeDB';\r\nimport { setFilmInfo } from '../../firebase/realTimeDB'; \r\nimport sprite from '../../images/sprite.svg';\r\nimport noImage from '../../images/noImage.png';\r\n\r\nimport { UserAddFilmsBtns } from '../components/UserAddFilmBtns/UserAddFilmsBtns';\r\nconst StyledSection = styled.section`\r\nposition: relative;\r\ndisplay: flex;\r\nmin-width: 620px;\r\njustify-content: space-between;\r\npadding:  50px;\r\n`\r\nconst StyledImgWrap = styled.div`\r\nwidth: 320px;\r\nflex-shrink: 0;\r\nmargin-right: 30px;\r\n`\r\nconst StyledContent = styled.div`\r\n`\r\nconst StyledTitle = styled.h3`\r\nfont-size: 38px;\r\n`\r\nconst StyledList = styled.ul`\r\ndisplay: ${props => props.genres && 'flex'};\r\nflex-wrap: ${props => props.genres && 'wrap'};\r\n`\r\nconst StyledListItem = styled.li`\r\n&:not(:last-child){\r\n    margin-bottom: ${props => props.content && '20px'};\r\n    margin-right: ${props => props.genres && '20px'};\r\n}\r\n`\r\n\r\nconst StyledText = styled.p`\r\n\r\n\r\n`\r\n\r\n\r\n const FilmInfo = () => { \r\n     const [film, setFilm] = useState('');\r\n     const [inFavorite, setInFavorite] = useState(false);\r\n     const [inWatched, setInWatched] = useState(false);\r\n     const [inWishList, setInWishList] = useState(false);\r\n     const { isAuth, id } = useAuth();\r\n     const { filmId } = useParams();\r\n     const getFilm = async (id) => { \r\n        try {\r\n            const film = await getMovieById(id);\r\n            setFilm(film);\r\n        \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n} \r\n    \r\n    useEffect(() => { \r\n         getFilm(filmId)\r\n    }, [])\r\n     /* useEffect(() => {\r\n         console.log(film)\r\n      },[film]) */\r\n     \r\n   \r\n     return (<>\r\n         {film &&\r\n             <StyledSection>\r\n                 <StyledImgWrap>\r\n            <img src={film.poster_path? `https://image.tmdb.org/t/p/original${film.poster_path}` : noImage}></img>\r\n        </StyledImgWrap>\r\n        <StyledContent>\r\n            <StyledTitle>{film.title}</StyledTitle>\r\n                     <StyledList content={ true}>\r\n                <StyledListItem content={ true}>\r\n                    <StyledText date={ true}>Release date: {film.release_date}</StyledText>\r\n                </StyledListItem>\r\n                <StyledListItem content={ true}>\r\n                    <StyledText>Genres:</StyledText>\r\n                <StyledList genres={ true}>\r\n                                 {film.genres.map(item => (<StyledListItem key={item.id } genres><StyledText  id={item.id}>{item.name }</StyledText></StyledListItem>)) }\r\n            </StyledList>\r\n                </StyledListItem>\r\n                <StyledListItem content={ true}>\r\n                    <StyledText rate={ true}>Rate: {film.vote_average }</StyledText>\r\n                         </StyledListItem>\r\n                         {film.overview && \r\n                         <StyledListItem content={ true}>\r\n                    <StyledText overview={ true}>Overview:{ film.overview}</StyledText>\r\n                </StyledListItem>}\r\n                \r\n            </StyledList>  \r\n            \r\n        </StyledContent>\r\n                 <UserAddFilmsBtns film={ film}></UserAddFilmsBtns>  \r\n             </StyledSection>     \r\n         }\r\n    \r\n     </>\r\n         \r\n        \r\n         \r\n     )\r\n}\r\nexport default FilmInfo"],"names":["API_KEY","axios","getTrendMovieList","page","mediaType","timeWindow","then","data","getUpcomingMovies","getTopRatedMovies","getMovieById","movieId","getMovieByName","search","year","console","log","results","pages","total_pages","getGenres","genres","StyledBtnWrap","styled","StyledBtn","StyledIconButton","inList","styleVars","UserAddFilmsBtns","film","useAuth","isAuth","id","useUserFilms","favorites","watched","wishlist","dispatch","useDispatch","toggleFilm","uid","category","filmsList","removeFunc","addFunc","filterId","key","deleteFilmInfo","setFilmInfo","newKey","info","filmId","filmsIdArr","map","includes","find","onBtnClick","e","currentTarget","removeFromFavorite","setFavorite","removeFromWatched","setWatched","removeFromWishlist","setWishlist","setBtnFill","fill","btn","onClick","style","type","href","sprite","StyledSection","StyledImgWrap","StyledContent","StyledTitle","StyledList","props","StyledListItem","content","StyledText","useState","setFilm","useParams","getFilm","useEffect","src","poster_path","noImage","title","date","release_date","item","name","rate","vote_average","overview"],"sourceRoot":""}