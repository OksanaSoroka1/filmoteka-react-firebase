{"version":3,"file":"static/js/303.83504576.chunk.js","mappings":"4NAMcA,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,eACzC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAcC,EAAd,KAKI,OAJAC,EAAAA,EAAAA,YAAU,WACNJ,EAAeE,KAChB,CAACA,KAGA,UAAC,KAAD,WACMJ,GACF,SAAC,KAAD,CAAiBC,KAAMA,EAAMM,GAAIP,EAAMA,KAAMA,EAAMI,MAAOA,EAAOI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAON,cCT1GO,EAAW,SAAC,GAAuB,IAAtBX,EAAqB,EAArBA,KAAMY,EAAe,EAAfA,SACrB,GAAgCT,EAAAA,EAAAA,UAAS,IAAzC,eAAOU,EAAP,KAAiBC,EAAjB,KACA,GAA0BX,EAAAA,EAAAA,UAAS,IAAnC,eAAOY,EAAP,KAAcC,EAAd,KACA,GAAgCb,EAAAA,EAAAA,UAAS,IAAzC,eAAOc,EAAP,KAAiBC,EAAjB,KAMA,OAAQ,UAAC,KAAD,CAAgBlB,KAAMA,EAAMmB,SAAU,SAACV,GAAD,OAJvB,SAACA,GACpBA,EAAEW,iBACFR,EAAS,CAACC,SAAAA,EAAUE,MAAAA,EAAOE,SAAAA,IAEqBI,CAAeZ,IAA3D,UACM,WAATT,IAAqB,SAACD,EAAD,CAAWC,KAAK,OAAOC,KAAK,OAAOC,eAAiB,SAACE,GAAD,OAAUU,EAAYV,OAChG,SAACL,EAAD,CAAWC,KAAK,QAAQC,KAAK,QAAQC,eAAiB,SAACE,GAAD,OAAUY,EAASZ,OACzE,SAACL,EAAD,CAAWC,KAAK,WAAWC,KAAK,WAAWC,eAAiB,SAACE,GAAD,OAAUc,EAAYd,OAClF,SAAC,KAAD,CAAeH,KAAK,SAApB,SAA+BD,S,2LCwBvC,EAlCmB,WAAO,IAAD,EACdsB,GAAWC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAHI,8CAKrB,WAA8BC,GAA9B,2FACYb,EAA8Ba,EAA9Bb,MAAOE,EAAuBW,EAAvBX,SAAUJ,EAAae,EAAbf,SAD7B,mBAK2BgB,EAAAA,EAAAA,GAAOd,EAAOE,EAAUJ,GALnD,OAKciB,EALd,OAOQR,GAASS,EAAAA,EAAAA,IAAQ,CACbhB,MAAOe,EAAKf,MACZiB,MAAOF,EAAKG,YACZ1B,GAAIuB,EAAKI,IACTlC,KAAM8B,EAAKK,gBAGjBC,EAAAA,EAAAA,IAAiBN,EAAKI,IAAKnB,EAAOF,GAEhCa,EAAQ,UAACF,EAASa,aAAV,aAAC,EAAgBC,YAhBjC,kDAkBsB,KAAMC,KACH,KAAMC,QAnB/B,2DALqB,sBA6BrB,OAAQ,iCACJ,SAAC7B,EAAA,EAAD,CAAUX,KAAK,SAASY,SA9BP,+CA+BjB,+CAAqB,SAAC,KAAD,CAAM6B,GAAG,SAASJ,MAAO,CAACC,WAAU,UAAEd,EAASa,aAAX,aAAE,EAAgBC,YAAtD,2B,6GCrCvBI,GAAOC,EAAAA,EAAAA,MAEAC,EAAK,yCAAG,WAAM7B,EAAOE,GAAb,uFACd4B,EAAAA,EAAAA,IAA2BH,EAAM3B,EAAOE,GAD1B,gCAEPyB,EAAKI,aAFE,2CAAH,wDAKLjB,EAAM,yCAAG,WAAOd,EAAOE,EAAUJ,GAAxB,uFACfkC,EAAAA,EAAAA,IAA+BL,EAAM3B,EAAOE,GAD7B,wBAEH+B,EAAAA,EAAAA,IAAcN,EAAKI,YAAa,CAClCX,YAAatB,IAHR,cAOlBoC,QAAQC,IAAI,OAAQR,EAAKI,aAPP,kBAQXJ,EAAKI,aARM,2CAAH","sources":["features/components/AuthForm/AuthInput.js","features/components/AuthForm/AuthForm.js","features/pages/SignUp/SignUp.js","firebase/auth.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useState , useEffect} from 'react';\r\nimport { StyledAuthForm, StyledAuthLabel, StyledAuthInput, StyledAuthBtn } from '../../../styles/styledComponents';\r\n\r\nexport  const AuthInput = ({ name, type, onHandleChange}) => { \r\nconst [value, setValue]=useState('')\r\n    useEffect(() => {\r\n        onHandleChange(value)\r\n    }, [value])\r\n    \r\n    return (\r\n        <StyledAuthLabel>\r\n            { name}\r\n            <StyledAuthInput type={type} id={name} name={name} value={value} onChange={(e) => setValue(e.target.value) }></StyledAuthInput>\r\n        </StyledAuthLabel>\r\n    )       \r\n    \r\n}\r\n","import styled from 'styled-components';\r\nimport { styleVars } from '../../../styles/vars';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useState } from 'react';\r\nimport { StyledAuthForm, StyledAuthLabel, StyledAuthInput, StyledAuthBtn } from '../../../styles/styledComponents';\r\nimport { AuthInput } from './AuthInput';\r\nconst AuthForm = ({name, sendData }) => { \r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const onHandleSubmit = (e) => { \r\n        e.preventDefault();\r\n        sendData({userName, email, password})\r\n    }\r\n    return (<StyledAuthForm name={name} onSubmit={(e)=> onHandleSubmit(e) }>\r\n        {name === 'SignUp' && <AuthInput name='Name' type='text' onHandleChange={ (value)=> setUserName(value)}></AuthInput>}\r\n        <AuthInput name='Email' type='email' onHandleChange={ (value)=> setEmail(value)}></AuthInput>\r\n        <AuthInput name='Password' type='password' onHandleChange={ (value)=> setPassword(value)}></AuthInput>\r\n        <StyledAuthBtn type='submit'>{ name}</StyledAuthBtn>\r\n    \r\n    </StyledAuthForm>)\r\n}\r\nexport  {AuthForm}","import { useDispatch } from 'react-redux';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { useEffect, useState } from 'react';\r\nimport { setUser } from '../../../store/auth/redusers';\r\nimport { AuthForm } from '../../components/AuthForm';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { loadUserInfoToDB } from '../../../firebase/realTimeDB';\r\nimport { signUp } from '../../../firebase/auth';\r\nconst SignUpPage = () => { \r\n     const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n  \r\n    async function onHandleSignUp(data) { \r\n        const { email, password, userName } = data;\r\n        \r\n       \r\n        try {\r\n            const user = await signUp(email, password, userName)\r\n            \r\n            dispatch(setUser({\r\n                email: user.email,\r\n                token: user.accessToken,\r\n                id: user.uid,\r\n                name: user.displayName\r\n            }));\r\n        \r\n          loadUserInfoToDB(user.uid, email, userName)\r\n              \r\n            navigate(location.state?.background )\r\n       } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;          \r\n       }\r\n  \r\n    }\r\n\r\n    return (<>\r\n        <AuthForm name='SignUp' sendData={ onHandleSignUp}></AuthForm>\r\n        <p>Already a member? <Link to='/login' state={{background: location.state?.background}}>Login</Link></p>\r\n    </>)\r\n}\r\nexport default SignUpPage","import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile  } from \"firebase/auth\";\r\n\r\n\r\nconst auth = getAuth();\r\n \r\nexport const login = async(email, password) => { \r\n await signInWithEmailAndPassword(auth, email, password)\r\n      return  auth.currentUser     \r\n}\r\n\r\nexport const signUp = async (email, password, userName) => { \r\n await createUserWithEmailAndPassword(auth, email, password)\r\n             await updateProfile(auth.currentUser, {\r\n                 displayName: userName\r\n                }) \r\n             \r\n        \r\n    console.log('user', auth.currentUser)\r\n    return auth.currentUser\r\n}"],"names":["AuthInput","name","type","onHandleChange","useState","value","setValue","useEffect","id","onChange","e","target","AuthForm","sendData","userName","setUserName","email","setEmail","password","setPassword","onSubmit","preventDefault","onHandleSubmit","dispatch","useDispatch","location","useLocation","navigate","useNavigate","data","signUp","user","setUser","token","accessToken","uid","displayName","loadUserInfoToDB","state","background","code","message","to","auth","getAuth","login","signInWithEmailAndPassword","currentUser","createUserWithEmailAndPassword","updateProfile","console","log"],"sourceRoot":""}